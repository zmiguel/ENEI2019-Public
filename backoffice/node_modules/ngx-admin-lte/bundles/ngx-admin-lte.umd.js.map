{
  "version": 3,
  "file": "ngx-admin-lte.umd.js",
  "sources": [
    "ng://ngx-admin-lte/out/ngx-admin-lte.module.ts",
    "ng://ngx-admin-lte/out/widgets/component-loader/component-loader.component.ts",
    "ng://ngx-admin-lte/out/widgets/breadcrumb/breadcrumb.component.ts",
    "ng://ngx-admin-lte/out/widgets/user-box/user-box.component.ts",
    "ng://ngx-admin-lte/out/widgets/tasks-box/tasks-box.component.ts",
    "ng://ngx-admin-lte/out/widgets/notification-box/notification-box.component.ts",
    "ng://ngx-admin-lte/out/widgets/messages-box/messages-box.component.ts",
    "ng://ngx-admin-lte/out/widgets/control-sidebar/control-sidebar.component.ts",
    "ng://ngx-admin-lte/out/widgets/menu-aside/menu-aside.component.ts",
    "ng://ngx-admin-lte/out/widgets/app-footer/app-footer.component.ts",
    "ng://ngx-admin-lte/out/widgets/logo/logo.component.ts",
    "ng://ngx-admin-lte/out/widgets/app-header/app-header.component.ts",
    "ng://ngx-admin-lte/out/pipes/safe-html.pipes.ts",
    "ng://ngx-admin-lte/out/models/notification.ts",
    "ng://ngx-admin-lte/out/models/preference.ts",
    "ng://ngx-admin-lte/out/models/message.ts",
    "ng://ngx-admin-lte/out/layouts/register/register.component.ts",
    "ng://ngx-admin-lte/out/layouts/login/login.component.ts",
    "ng://ngx-admin-lte/out/layouts/auth/auth.ts",
    "ng://ngx-admin-lte/out/services/control-sidebar.service.ts",
    "ng://ngx-admin-lte/out/services/footer.service.ts",
    "ng://ngx-admin-lte/out/services/logo.service.ts",
    "ng://ngx-admin-lte/out/services/menu.service.ts",
    "ng://ngx-admin-lte/out/services/rest.service.ts",
    "ng://ngx-admin-lte/out/services/notifications.service.ts",
    "ng://ngx-admin-lte/out/services/messages.service.ts",
    "ng://ngx-admin-lte/out/services/logger.service.ts",
    "ng://ngx-admin-lte/out/services/translate.service.ts",
    "ng://ngx-admin-lte/out/services/can-activate-guard.service.ts",
    "ng://ngx-admin-lte/out/services/user.service.ts",
    "ng://ngx-admin-lte/out/models/user.ts",
    "ng://ngx-admin-lte/out/services/breadcrumb.service.ts"
  ],
  "sourcesContent": [
    "import { NgModule } from '@angular/core';\nimport { HttpModule, Http } from '@angular/http';\nimport { RouterModule } from '@angular/router';\nimport { BrowserModule } from '@angular/platform-browser';\n\nimport { ToasterModule, ToasterService } from 'angular2-toaster/angular2-toaster';\nimport { TranslateModule, TranslateLoader } from '@ngx-translate/core';\nimport { TranslateHttpLoader } from '@ngx-translate/http-loader';\nimport { HttpClientModule, HttpClient } from '@angular/common/http';\n\n// AoT requires an exported function for factories\nexport function HttpLoaderFactory (httpClient) {\n  return new TranslateHttpLoader(httpClient, 'assets/i18n/', '.json');\n}\n\n// Pipes\nimport { SafeHtmlPipe } from './pipes/safe-html.pipes';\n\n// Widgets\nimport { AppHeaderComponent } from './widgets/app-header/app-header.component';\nimport { LogoComponent } from './widgets/logo/logo.component';\nimport { AppFooterComponent } from './widgets/app-footer/app-footer.component';\nimport { MenuAsideComponent } from './widgets/menu-aside/menu-aside.component';\nimport { ControlSidebarComponent } from './widgets/control-sidebar/control-sidebar.component';\nimport { MessagesBoxComponent } from './widgets/messages-box/messages-box.component';\nimport { NotificationBoxComponent } from './widgets/notification-box/notification-box.component';\nimport { TasksBoxComponent } from './widgets/tasks-box/tasks-box.component';\nimport { UserBoxComponent } from './widgets/user-box/user-box.component';\nimport { BreadcrumbComponent } from './widgets/breadcrumb/breadcrumb.component';\nimport { ComponentLoaderComponent } from './widgets/component-loader/component-loader.component';\n\n// Services\nimport { UserService } from './services/user.service';\nimport { MenuService } from './services/menu.service';\nimport { LogoService } from './services/logo.service';\nimport { FooterService } from './services/footer.service';\nimport { MessagesService } from './services/messages.service';\nimport { CanActivateGuard } from './services/can-activate-guard.service';\nimport { NotificationsService } from './services/notifications.service';\nimport { BreadcrumbService } from './services/breadcrumb.service';\nimport { TranslateService } from './services/translate.service';\nimport { LoggerService } from './services/logger.service';\nimport { ControlSidebarService } from './services/control-sidebar.service';\n\n// Layouts\nimport { LayoutAuthComponent } from './layouts/auth/auth';\nimport { LayoutLoginComponent } from './layouts/login/login.component';\nimport { LayoutRegisterComponent } from './layouts/register/register.component';\n\n\n@NgModule({\n  declarations: [\n    // PIPES\n    SafeHtmlPipe,\n    // WIDGETS\n    BreadcrumbComponent,\n    AppHeaderComponent,\n    LogoComponent,\n    AppFooterComponent,\n    MenuAsideComponent,\n    ControlSidebarComponent,\n    MessagesBoxComponent,\n    NotificationBoxComponent,\n    TasksBoxComponent,\n    UserBoxComponent,\n    ComponentLoaderComponent,\n    // LAYOUTS\n    LayoutAuthComponent,\n    LayoutLoginComponent,\n    LayoutRegisterComponent\n  ],\n  imports: [\n    BrowserModule,\n    HttpModule,\n    RouterModule,\n    ToasterModule,\n    HttpClientModule,\n    TranslateModule.forRoot({\n      loader: {\n        provide: TranslateLoader,\n        useFactory: (HttpLoaderFactory),\n        deps: [HttpClient]\n      }\n    }),\n  ],\n  exports: [\n    SafeHtmlPipe,\n  ],\n  providers: [\n    // SERVICES\n    UserService,\n    MenuService,\n    LogoService,\n    FooterService,\n    BreadcrumbService,\n    MessagesService,\n    CanActivateGuard,\n    NotificationsService,\n    TranslateService,\n    LoggerService,\n    ControlSidebarService,\n    ToasterService\n  ]\n})\nexport class NgxAdminLteModule { }\n",
    "import { Component, Input, OnInit, OnDestroy, OnChanges, ComponentRef,\n    ComponentFactoryResolver, ViewContainerRef, ViewChild, ViewEncapsulation} from '@angular/core';\n\n/**\n * Component to dynamicly load other component\n */\n@Component({\n    selector: 'app-component-loader',\n    encapsulation: ViewEncapsulation.None,\n    template: '<ng-container #destination ></ng-container>'\n})\nexport class ComponentLoaderComponent implements OnInit, OnDestroy, OnChanges {\n\n    /**\n     * class of the component to load\n     */\n    @Input() class_component: any = null;\n\n    /**\n     * data to pass to component\n     */\n    @Input() data: any = null;\n\n    /**\n     * component reference in dom\n     */\n    @ViewChild('destination', {read: ViewContainerRef}) viewContainerRef;\n    /**\n     * component reference\n     */\n    private componentRef: any = null;\n\n    /**\n     * Component initialisation\n     */\n    constructor(\n        private _factoryResolver: ComponentFactoryResolver\n    ) { }\n\n\n    /**\n     * Lifecycle hook OnInit\n     */\n    ngOnInit() {\n        // Build the child component\n        const factory = this._factoryResolver.resolveComponentFactory(this.class_component);\n        this.componentRef = this.viewContainerRef.createComponent(factory);\n\n        // then give some data\n        this.setComponentData(this.data);\n    }\n\n    /**\n     * Lifecycle hook OnChanges, on modification of data send it to the child\n     */\n    ngOnChanges(changes) {\n        this.setComponentData(changes);\n    }\n\n    /**\n     * Send data to the inner component\n     */\n    private setComponentData(changes) {\n        if (this.componentRef) {\n        // send data to component\n        Object.assign(this.componentRef.instance, changes);\n        // trigger component ngOnChange\n        this.componentRef.instance.ngOnChanges( changes );\n        }\n    }\n\n    /**\n     * Lifecycle hook OnDestroy\n     */\n    ngOnDestroy() {\n        if (this.componentRef) {\n        this.componentRef.destroy();\n        }\n    }\n}\n",
    "import { Component } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { BreadcrumbService } from '../../services/breadcrumb.service';\n\n@Component({\n  selector: 'app-breadcrumb',\n  template: `<section class=\"content-header\" *ngIf=\"display\">\n  <h1>\n    {{ header }}\n    <small>{{ description }}</small>\n  </h1>\n  <ol class=\"breadcrumb\">\n    <ng-container *ngFor=\"let item of levels\">\n      <li [class.active]=\"item.active\">\n        <a [routerLink]=\"item.link\">\n          <i *ngIf=\"item.icon !=null\" class=\"fa fa-{{item.icon}}\"></i> {{ item.title }}\n        </a>\n      </li>\n    </ng-container>\n  </ol>\n</section>\n`\n})\nexport class BreadcrumbComponent {\n  public display = false;\n  public header = '';\n  public description = '';\n  public levels: Array<any> = [];\n\n  constructor(private breadServ: BreadcrumbService) {\n    // getting the data from the services\n    this.breadServ.getCurrent().subscribe((data) => {\n      this.display = data.display;\n      this.header = data.header;\n      this.description = data.description;\n      this.levels = data.levels;\n    });\n  }\n\n}\n",
    "import { Component, OnInit } from '@angular/core';\nimport { User } from '../../models/user';\nimport { UserService } from '../../services/user.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  /* tslint:disable */\n  selector: '.userBox',\n  /* tslint:enable */\n  styles: [``],\n  template: `<!-- Menu Toggle Button -->\n<a href=\"#\" class=\"dropdown-toggle\" data-toggle=\"dropdown\">\n  <!-- The user image in the navbar-->\n  <img *ngIf=\"currentUser.avatarUrl != ''\" [src]=\"currentUser.avatarUrl\" class=\"user-image\" [alt]=\"currentUser.getName()\">\n  <!-- hidden-xs hides the username on small devices so only the image appears. -->\n  <span class=\"hidden-xs\">{{currentUser.getName()}}</span>\n</a>\n<ul class=\"dropdown-menu\">\n  <!-- The user image in the menu -->\n  <li class=\"user-header\">\n    <img *ngIf=\"currentUser.avatarUrl != ''\" [src]=\"currentUser.avatarUrl\" class=\"img-circle\" [alt]=\"currentUser.getName()\">\n    <p>\n      {{currentUser.getName()}} - Web Developer\n      <small>{{ 'USERBOX.MEMBERSINCE' | translate }} {{currentUser.creationDate}}</small>\n    </p>\n  </li>\n  <!-- Menu Body -->\n  <li class=\"user-body\">\n    <div class=\"col-xs-4 text-center\">\n      <a href=\"#\">Followers</a>\n    </div>\n    <div class=\"col-xs-4 text-center\">\n      <a href=\"#\">Sales</a>\n    </div>\n    <div class=\"col-xs-4 text-center\">\n      <a href=\"#\">Friends</a>\n    </div>\n  </li>\n  <!-- Menu Footer-->\n  <li class=\"user-footer\">\n    <div class=\"pull-left\">\n      <a href=\"#\" class=\"btn btn-default btn-flat\">{{ 'USERBOX.PROFILE' | translate }}</a>\n    </div>\n    <div class=\"pull-right\">\n      <a (click)=\"logout()\" class=\"btn btn-default btn-flat\">{{ 'USERBOX.SIGNOUT' | translate }}</a>\n    </div>\n  </li>\n</ul>\n`\n})\nexport class UserBoxComponent implements OnInit {\n\n  // default user, only an example, please use the userService to modify\n  public currentUser: User =  new User({\n      avatarUrl: 'assets/img/user2-160x160.jpg',\n      email: 'weber.antoine@outlook.com',\n      firstname: 'WEBER',\n      lastname: 'Antoine'\n  });\n\n  constructor(private userServ: UserService, private router: Router) {\n    // se connecter au modif du user courant\n    this.userServ.getCurrent().subscribe((user: User) => this.currentUser = user);\n  }\n\n  public ngOnInit() {\n    // TODO\n  }\n\n  public logout = (): void => {\n    this.userServ.logout();\n  }\n}\n",
    "import { Component, OnInit, Input } from '@angular/core';\nimport { Message } from '../../models/message';\n\n@Component( {\n    /* tslint:disable */\n    selector: '.tasksBox',\n    /* tslint:enable */\n    styles: [``],\n    template: `<!-- Menu Toggle Button -->\n<a href=\"#\" class=\"dropdown-toggle\" data-toggle=\"dropdown\"> <i\n\tclass=\"fa fa-flag-o\"></i> <span class=\"label label-danger\">9</span>\n</a>\n<ul class=\"dropdown-menu\">\n\t<li class=\"header\">{{ 'TASKBOX.COUNT' | translate:tasksLength }}</li>\n\t<li>\n\t\t<!-- Inner menu: contains the tasks -->\n\t\t<ul class=\"menu\">\n\t\t\t<li>\n\t\t\t\t<!-- Task item --> <a href=\"#\"> <!-- Task title and progress text -->\n\t\t\t\t\t<h3>\n\t\t\t\t\t\tDesign some buttons <small class=\"pull-right\">20%</small>\n\t\t\t\t\t</h3> <!-- The progress bar -->\n\t\t\t\t\t<div class=\"progress xs\">\n\t\t\t\t\t\t<!-- Change the css width attribute to simulate progress -->\n\t\t\t\t\t\t<div class=\"progress-bar progress-bar-aqua\" style=\"width: 20%\"\n\t\t\t\t\t\t\trole=\"progressbar\" aria-valuenow=\"20\" aria-valuemin=\"0\"\n\t\t\t\t\t\t\taria-valuemax=\"100\">\n\t\t\t\t\t\t\t<span class=\"sr-only\">20% Complete</span>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t</a>\n\t\t\t</li>\n\t\t\t<!-- end task item -->\n\t\t</ul>\n\t</li>\n\t<li class=\"footer\"><a href=\"#\">{{ 'TASKBOX.FOOTER' | translate\n\t\t\t}}</a></li>\n</ul>\n`\n})\nexport class TasksBoxComponent implements OnInit {\n\n    messages: Message[];\n    tasksLength: {} = { 0: 0 };\n    @Input() public user;\n\n    constructor() {}\n\n    public ngOnInit() {}\n\n}\n",
    "import { Component, OnInit } from '@angular/core';\nimport { Notification } from '../../models/notification';\nimport { NotificationsService } from '../../services/notifications.service';\nimport { Http } from '@angular/http';\nimport { TranslateService } from '@ngx-translate/core';\nimport { LoggerService } from '../../services/logger.service';\n\n@Component( {\n    /* tslint:disable */\n    selector: '.notificationsBox',\n    /* tslint:enable */\n    styles: [``],\n    template: `<!-- Menu toggle button -->\n<a href=\"#\" class=\"dropdown-toggle\" data-toggle=\"dropdown\">\n\t<i class=\"fa fa-bell-o\"></i>\n\t<span class=\"label label-warning\">{{ notifications.length }}</span>\n</a>\n<ul class=\"dropdown-menu\">\n\t<li class=\"header\">{{ 'NOTIFBOX.COUNT' | translate:notifLength }}</li>\n\t<li>\n\t\t<!-- Inner Menu: contains the notifications -->\n\t\t<ul class=\"menu\">\n\t\t\t<li *ngFor=\"let notif of notifications.reverse(); let i = index\">\n\t\t\t\t<a routerLink=\"{{notif.link}}\">\n\t\t\t\t\t<i class=\"{{notif.class}}\"></i> {{notif.content}}\n\t\t\t\t</a>\n\t\t\t</li>\n\t\t\t<!-- end notification -->\n\t\t</ul>\n\t</li>\n\t<li class=\"footer\">\n\t\t<a href=\"#\">\n\t\t\t{{ 'NOTIFBOX.FOOTER' | translate }}\n\t\t</a>\n\t</li>\n</ul>\n`\n})\nexport class NotificationBoxComponent implements OnInit {\n\n    public notifications: Notification[];\n    notifLength = { 0: 0 };\n\n    constructor( private notifServ: NotificationsService, private logger: LoggerService ) {\n        this.notifications = [];\n    }\n\n    public ngOnInit() {\n        // Every incoming notification changes entire local notification Array.\n        this.notifServ.notifications.subscribe(( notif: Notification[] ) => {\n            this.logger.log( 'NotificationBox', null, 'RECEIVED.NOTIFICATION', null );\n            this.notifications = notif;\n            this.notifLength = { 0: this.notifications.length };\n        });\n    }\n\n}\n",
    "import { Component, OnInit, Input } from '@angular/core';\nimport { Http } from '@angular/http';\nimport { TranslateService } from '@ngx-translate/core';\nimport { MessagesService } from '../../services/messages.service';\nimport { LoggerService } from '../../services/logger.service';\nimport { Message } from '../../models/message';\n\n@Component( {\n    /* tslint:disable */\n    selector: '.messagesBox',\n    /* tslint:enable */\n    styles: [``],\n    template: `<!-- Menu toggle button -->\n<a href=\"#\" class=\"dropdown-toggle\" data-toggle=\"dropdown\"> <i\n\tclass=\"fa fa-envelope-o\"></i> <span class=\"label label-success\"\n\t[innerHTML]=\"messages.length\"></span>\n</a>\n<ul class=\"dropdown-menu\">\n\t<li class=\"header\">{{ 'MSGBOX.COUNT' | translate:msgLength }}</li>\n\t<li>\n\t\t<!-- inner menu: contains the messages -->\n\t\t<ul class=\"menu\">\n\t\t\t<li *ngFor=\"let msg of messages; let i = index\">\n\t\t\t\t<!-- start message --> <a href=\"#\">\n\t\t\t\t\t<div class=\"pull-left\">\n\t\t\t\t\t\t<!-- User Image -->\n\t\t\t\t\t\t<img src=\"{{msg.author.avatarUrl}}\" class=\"img-circle\"\n\t\t\t\t\t\t\talt=\"{{ msg.author.getName() }}\">\n\t\t\t\t\t</div> <!-- Message title and timestamp -->\n\t\t\t\t\t<h4>\n\t\t\t\t\t\t{{msg.title}} <small><i class=\"fa fa-clock-o\"></i>\n\t\t\t\t\t\t\t{{msg.date | date:'yMd' }}</small>\n\t\t\t\t\t</h4> <!-- The message -->\n\t\t\t\t\t<p>{{msg.content}}</p>\n\t\t\t</a>\n\t\t\t</li>\n\t\t\t<!-- end message -->\n\t\t</ul> <!-- /.menu -->\n\t</li>\n\t<li class=\"footer\">\n    <a href=\"#\">{{ 'MSGBOX.FOOTER' | translate }}</a>\n  </li>\n</ul>\n`\n})\nexport class MessagesBoxComponent implements OnInit {\n    // Declaring the variable for binding with initial value\n    public messages: Message[];\n    msgLength = { 0: 0 };\n\n    constructor( private msgServ: MessagesService, private logger: LoggerService ) {\n        this.messages = [];\n    }\n\n    public ngOnInit() {\n        // Every incoming message changes entire local message Array.\n        this.msgServ.messages.subscribe(( msg: Message[] ) => {\n            this.logger.log( 'MsgBox', null, 'RECEIVED.MESSAGE', null );\n            this.messages = msg;\n            this.msgLength = { 0: this.messages.length };\n        });\n    }\n}\n",
    "import { Component, Input, OnDestroy, OnInit } from '@angular/core';\nimport { ControlSidebarService } from '../../services/control-sidebar.service';\n\n@Component({\n  selector: 'app-control-sidebar',\n  styles: [``],\n  template: `<!-- Control Sidebar -->\n<aside [ngClass]=\"{\n\t'control-sidebar': true,\n\t'control-sidebar-dark': true,\n\t'control-sidebar-open': _sidebar.getState() | async\n}\">\n    <!-- Create the tabs -->\n    <ul class=\"nav nav-tabs nav-justified control-sidebar-tabs\">\n        <ng-container *ngFor=\"let item of items\">\n            <li [ngClass]=\"{'active': item.active}\">\n                <a href=\"{{ item.id }}\" data-toggle=\"tab\"><i class=\"fa fa-{{ item.icon }}\"></i></a>\n            </li>\n        </ng-container>\n    </ul>\n    <!-- Tab panes -->\n    <div class=\"tab-content\">\n        <ng-container *ngFor=\"let item of items\">\n            <!-- Home tab content -->\n            <div [ngClass]=\"{'active': item.active, 'tab-pane': true}\" id=\"{{ item.id }}\">\n                <ng-container *ngFor=\"let subitem of item.items\">\n                    <!-- COMPONENT -->\n                    <ng-container *ngIf=\"subitem.class\">\n                        <li>\n                            <app-component-loader [class_component]=\"subitem.class\" [data]=\"subitem.data\"></app-component-loader>\n                        </li>\n                    </ng-container>\n                    <ng-container *ngIf=\"subitem.html\">\n                        {{ subitem.html | safeHtml }}\n                    </ng-container>\n                </ng-container>\n            </div>\n        </ng-container>\n    </div>\n</aside>\n<!-- /.control-sidebar -->\n<!-- Add the sidebar's background. This div must be placed\n               immediately after the control sidebar -->\n<div class=\"control-sidebar-bg\"></div>`\n})\nexport class ControlSidebarComponent implements OnDestroy, OnInit {\n  public items: any[];\n  private subs: any[];\n\n  constructor (public _sidebar: ControlSidebarService) { }\n\n  public ngOnInit () {\n    const sub = this._sidebar.getItems().subscribe(items => {\n      this.items = items;\n    });\n    this.subs = [];\n    this.subs.push(sub);\n  }\n\n  public ngOnDestroy () {\n    this.subs.forEach((sub) => sub.unsubscribe());\n    this.subs = null;\n    this.items = null;\n  }\n}\n",
    "import { Component, OnInit, Input } from '@angular/core';\nimport { User } from '../../models/user';\nimport { Router } from '@angular/router';\nimport { UserService } from '../../services/user.service';\n\n@Component({\n  selector: 'app-menu-aside',\n  styles: [``],\n  template: `<!-- Left side column. contains the logo and sidebar -->\n<aside class=\"main-sidebar\">\n\t<!-- sidebar: style can be found in sidebar.less -->\n\t<section class=\"sidebar\" >\n\t\t<!-- Sidebar user panel (optional) -->\n\t\t<div *ngIf=\"display_menu_user\" class=\"user-panel\">\n\t\t\t<div class=\"pull-left image\" *ngIf=\"currentUser?.avatarUrl\" >\n\t\t\t\t<img [src]=\"currentUser?.avatarUrl\" class=\"img-circle\"\n\t\t\t\t\t[alt]=\"currentUser?.getName()\">\n\t\t\t</div>\n\t\t\t<div class=\"pull-left info\">\n\t\t\t\t<p>{{currentUser?.getName()}}</p>\n\t\t\t\t<!-- Status -->\n\t\t\t\t<a href=\"#\"><i class=\"fa fa-circle text-success\"></i> Online</a>\n\t\t\t</div>\n\t\t</div>\n\t\t<!-- search form (Optional) -->\n\t\t<form *ngIf=\"display_menu_search\" action=\"#\" method=\"get\" class=\"sidebar-form\">\n\t\t\t<div class=\"input-group\">\n\t\t\t\t<input type=\"text\" name=\"q\" class=\"form-control\"\n\t\t\t\t\tplaceholder=\"Search...\"> <span class=\"input-group-btn\">\n\t\t\t\t\t<button type=\"submit\" name=\"search\" id=\"search-btn\"\n\t\t\t\t\t\tclass=\"btn btn-flat\">\n\t\t\t\t\t\t<i class=\"fa fa-search\"></i>\n\t\t\t\t\t</button>\n\t\t\t\t</span>\n\t\t\t</div>\n\t\t</form>\n\t\t<!-- /.search form -->\n\t\t<!-- Sidebar Menu -->\n\t\t<ul class=\"sidebar-menu\" data-widget=\"tree\">\n\t\t\t<ng-container *ngFor=\"let item of links\">\n\t\t\t\t<!-- HEADER -->\n\t\t\t\t<ng-container *ngIf=\"item.header\">\n\t\t\t\t\t<li class=\"header\">{{item.header}}</li>\n\t\t\t\t</ng-container>\n\t\t\t\t<!-- COMPONENT -->\n\t\t\t\t<ng-container *ngIf=\"item.class\">\n\t\t\t\t\t<li>\n\t\t\t\t\t\t<app-component-loader [class_component]=\"item.class\" [data]=\"item.data\"></app-component-loader>\n\t\t\t\t\t</li>\n\t\t\t\t</ng-container>\n\t\t\t\t<!-- LINK -->\n\t\t\t\t<ng-container *ngIf=\"item.link\">\n\t\t\t\t\t<li [class.active]=\"item.link[0] === currentUrl\">\n\t\t\t\t\t\t<a *ngIf=\"!item.external\" [routerLink]=\"item.link\">\n\t\t\t\t\t\t\t<i class=\"fa fa-{{item.icon}}\"></i>\n\t\t\t\t\t\t\t<span>{{item.title}}</span>\n\t\t\t\t\t\t</a>\n\t\t\t\t\t\t<a *ngIf=\"item.external\" [href]=\"item.link\" [target]=\"item.target\">\n\t\t\t\t\t\t\t<i class=\"fa fa-{{item.icon}}\"></i>\n\t\t\t\t\t\t\t<span>{{item.title}}</span>\n\t\t\t\t\t\t</a>\n\t\t\t\t\t</li>\n\t\t\t\t</ng-container>\n\t\t\t\t<!-- LINK WITH SUBLINKS -->\n\t\t\t\t<ng-container *ngIf=\"item.sublinks\">\n\t\t\t\t\t<li class=\"treeview\">\n\t\t\t\t\t\t<a href=\"#\">\n\t\t\t\t\t\t\t<i *ngIf=\"item.icon\" class=\"fa fa-{{item.icon}}\"></i>\n\t\t\t\t\t\t\t<span>{{item.title}}</span>\n\t\t\t\t\t\t\t<span class=\"pull-right-container\">\n\t\t\t\t\t\t\t\t<i class=\"fa fa-angle-left pull-right\"></i>\n\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t<!--i class=\"fa fa-angle-left pull-right\"></i-->\n\t\t\t\t\t\t</a>\n\t\t\t\t\t\t<ul class=\"treeview-menu\">\n\t\t\t\t\t\t\t<ng-container *ngFor=\"let subitem of item.sublinks\">\n\t\t\t\t\t\t\t\t<li [class.active]=\"subitem.link[0] === currentUrl\">\n\t\t\t\t\t\t\t\t\t<a *ngIf=\"!subitem.external\" [routerLink]=\"subitem.link\">\n\t\t\t\t\t\t\t\t\t\t<i *ngIf=\"subitem.icon\" class=\"fa fa-{{subitem.icon}}\"></i>\n\t\t\t\t\t\t\t\t\t\t<span>{{subitem.title}}</span>\n\t\t\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t\t\t\t<a *ngIf=\"subitem.external\" [href]=\"subitem.link\" [target]=\"subitem.target\">\n\t\t\t\t\t\t\t\t\t\t<i *ngIf=\"subitem.icon\" class=\"fa fa-{{subitem.icon}}\"></i>\n\t\t\t\t\t\t\t\t\t\t<span>{{subitem.title}}</span>\n\t\t\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t</ng-container>\n\t\t\t\t\t\t</ul>\n\t\t\t\t\t</li>\n\t\t\t\t</ng-container>\n\t\t\t</ng-container>\n\t\t</ul>\n\t\t<!-- /.sidebar-menu -->\n\t</section>\n\t<!-- /.sidebar -->\n</aside>\n`\n})\nexport class MenuAsideComponent implements OnInit {\n  public currentUrl: string;\n  public currentUser: User = new User();\n\n  @Input() links: Array<any> = [];\n  @Input() display_menu_user = true;\n  @Input() display_menu_search = true;\n\n  constructor(\n    private userServ: UserService,\n    public router: Router\n  ) {\n    // getting the current url\n    this.router.events.subscribe((evt: any) => this.currentUrl = evt.url);\n    this.userServ.getCurrent().subscribe((user) => this.currentUser = user);\n  }\n\n  public ngOnInit() { }\n\n}\n",
    "import { Component, Input } from '@angular/core';\nimport { FooterService } from '../../services/footer.service';\n\n@Component( {\n    selector: 'app-footer',\n    styles: [``],\n    template: `<!-- Main Footer -->\n<footer class=\"main-footer\">\n\t<!-- To the right -->\n\t<div class=\"pull-right hidden-xs\" [innerHTML]=\"footer?.right_part | safeHtml\"></div>\n\t<!-- Default to the left -->\n\t<div [innerHtml]=\"footer?.left_part | safeHtml\"></div>\n</footer>\n`\n})\nexport class AppFooterComponent {\n    public footer: any = {};\n\n    constructor( private footerServ: FooterService) {\n      this.footerServ.getCurrent().subscribe( footer => this.footer = footer);\n    }\n}\n",
    "import { Component, Input, OnInit } from '@angular/core';\nimport { TranslateService } from '@ngx-translate/core';\nimport { LogoService } from '../../services/logo.service';\n\n@Component( {\n    selector: 'app-logo',\n    template: `<!-- Logo -->\n<a href=\"#\" routerLink=\"/\" class=\"logo\"> <!-- mini logo for sidebar mini 50x50 pixels -->\n\t<ng-container *ngIf=\"hide !== 'mini'\">\n\t\t<ng-container *ngIf=\"logo?.html_mini; else oldsyntaxmini\">\n\t\t\t<span class=\"logo-mini\" [innerHtml]=\"logo?.html_mini | safeHtml\"></span>\n\t\t</ng-container>\n\t\t<ng-template #oldsyntaxmini>\n\t\t\t<span class=\"logo-mini\"><b>{{logo.small.bold}}</b>{{logo.small.normal}}</span> <!-- logo for regular state and mobile devices -->\n\t\t</ng-template>\n\t</ng-container>\n\n\t<ng-container *ngIf=\"hide !== 'lg'\">\n\t\t<ng-container *ngIf=\"logo?.html_lg; else oldsyntaxlg\">\n\t\t\t<span class=\"logo-lg\" [innerHtml]=\"logo?.html_lg | safeHtml\"></span>\n\t\t</ng-container>\n\t\t<ng-template #oldsyntaxlg>\n\t\t\t<span class=\"logo-lg\" ><b>{{logo.big.bold}}</b>{{logo.big.normal}}</span>\n\t\t</ng-template>\n\t</ng-container>\n</a>\n`\n})\nexport class LogoComponent implements OnInit {\n  public logo: any;\n  @Input() hide = '';\n\n  constructor(\n    private logoServ: LogoService\n  ) { }\n\n  public ngOnInit() {\n    this.logoServ.getCurrent().subscribe((logo) => {\n      this.logo = logo;\n    });\n  }\n}\n",
    "import { Component, Input } from '@angular/core';\nimport { TranslateService } from '@ngx-translate/core';\n\nimport { UserService } from '../../services/user.service';\nimport { ControlSidebarService } from '../../services/control-sidebar.service';\n\n@Component( {\n    selector: 'app-header',\n    styles: [``],\n    template: `<!-- Main Header -->\n<header class=\"main-header\">\n\t<!-- Logo -->\n\t<app-logo></app-logo>\n\t<!-- Header Navbar -->\n\t<nav class=\"navbar navbar-static-top\" role=\"navigation\">\n\t\t<!-- Sidebar toggle button-->\n\t\t<a class=\"sidebar-toggle\" data-toggle=\"offcanvas\" role=\"button\">\n\t\t\t<!-- ADMIN LTE 2.4.0  <a class=\"sidebar-toggle\" data-toggle=\"push-menu\" role=\"button\"> -->\n      <span class=\"sr-only\">Toggle navigation</span>\n\t\t</a>\n\t\t<!-- Navbar Right Menu -->\n\t\t<div class=\"navbar-custom-menu\">\n\t\t\t<ul class=\"nav navbar-nav\" >\n\t\t\t\t<!-- Messages: style can be found in dropdown.less-->\n\t\t\t\t<li class=\"dropdown messages-menu messagesBox\" *ngIf=\"display_messages\"></li>\n\t\t\t\t<!-- Notifications Menu -->\n\t\t\t\t<li class=\"dropdown notifications-menu notificationsBox\" *ngIf=\"display_notifications\"></li>\n\t\t\t\t<!-- Tasks Menu -->\n\t\t\t\t<li class=\"dropdown tasks-menu tasksBox\" *ngIf=\"display_tasks\"></li>\n\t\t\t\t<!-- User Account Menu -->\n        <li class=\"dropdown user user-menu userBox\" *ngIf=\"display_user\"></li>\n        <li *ngIf=\"display_logout\">\n\t\t\t\t\t<button class=\"btn btn-primary btn-lg\" (click)=\"logout()\">\n\t\t\t\t\t\t<i class=\"fa fa-power-off\"></i>\n\t\t\t\t\t</button>\n\t\t\t\t</li>\n\t\t\t\t<!-- Control Sidebar Toggle Button -->\n\t\t\t\t<li>\n\t\t\t\t\t<a class=\"toggle-sidebar-right\" role=\"button\" *ngIf=\"display_control\">\n\t\t\t\t\t\t<i class=\"fa fa-gears\" (click)=\"toggleSidebar()\"></i>\n\t\t\t\t\t</a>\n\t\t\t\t</li>\n\t\t\t\t<!-- Additionnal components -->\n\t\t\t\t<ng-container *ngFor=\"let widget of header_components\">\n\t\t\t\t\t<li>\n\t\t\t\t\t\t<app-component-loader [class_component]=\"widget.class\" [data]=\"widget.data\"></app-component-loader>\n\t\t\t\t\t</li>\n\t\t\t\t</ng-container>\n\t\t\t</ul>\n\t\t</div>\n\t</nav>\n</header>\n`\n})\nexport class AppHeaderComponent {\n  @Input() public display_messages = true;\n  @Input() public display_notifications = true;\n  @Input() public display_tasks = true;\n  @Input() public display_user = true;\n  @Input() public display_control = true;\n  @Input() public display_logout = false;\n  @Input() public header_components = [];\n\n  constructor(\n    private userService: UserService,\n    private sidebarService: ControlSidebarService\n  ) { }\n\n  logout(): void {\n    this.userService.logout();\n  }\n\n  toggleSidebar() {\n    this.sidebarService.toggle();\n  }\n\n}\n",
    "import { Pipe, PipeTransform } from '@angular/core';\nimport { SafeHtml, DomSanitizer } from '@angular/platform-browser';\n\n@Pipe({name: 'safeHtml'})\nexport class SafeHtmlPipe implements PipeTransform {\n    constructor(private sanitized: DomSanitizer) {\n    }\n    transform(value: string) {\n        return this.sanitized.bypassSecurityTrustHtml(value);\n    }\n}\n",
    "export class Notification {\n  public content: string;\n  public class: string;\n  public link: string;\n\n  public constructor(data: any = {}) {\n    this.content = data.content || '';\n    this.class = data.class || '';\n    this.link = data.link || '';\n  }\n}\n",
    "export class Preference {\n    public avatarUrl: string;\n    public preferredLang: string;\n\n    public constructor( data: any = {}) {\n        this.avatarUrl = data.avatarUrl || '';\n        this.preferredLang = data.preferredLang || null;\n    }\n\n}\n",
    "import { User } from './user';\n\nexport class Message {\n  public content: string;\n  public title: string;\n  public author: User;\n  public destination: User;\n  public date: string;\n\n  public constructor(data: any = {}) {\n    this.content = data.content || '';\n    this.title = data.title || '';\n    this.author = data.author || null;\n    this.destination = data.destination || null;\n    this.date = data.date || Date.now();\n  }\n}\n",
    "import { Component, OnInit, OnDestroy } from '@angular/core';\n\n@Component({\n  selector: 'app-layout-register',\n  template: `<body class=\"hold-transition register-page\">\n<div class=\"register-box\">\n  <div class=\"register-logo\">\n    <app-logo></app-logo>\n  </div>\n\n  <div class=\"register-box-body\">\n    <router-outlet></router-outlet>\n  </div>\n  <!-- /.form-box -->\n</div>\n<!-- /.register-box -->\n</body>\n`\n})\nexport class LayoutRegisterComponent implements OnInit {\n\n  constructor( ) {\n    // TODO\n  }\n\n  public ngOnInit() {\n    // TODO\n  }\n\n}\n",
    "import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-layout-login',\n  styles: ['./login.css'],\n  template: `<div class=\"login-box\" >\n  <div class=\"login-logo\">\n    <app-logo [hide]='\"mini\"'></app-logo>\n  </div>\n  <!-- /.login-logo -->\n  <div class=\"login-box-body\">\n    <router-outlet></router-outlet>\n  </div>\n  <!-- /.login-box-body -->\n</div>\n<!-- /.login-box -->\n`\n})\nexport class LayoutLoginComponent implements OnInit, OnDestroy {\n\n  constructor(\n  ) {\n  }\n\n  public ngOnInit() {\n    window.dispatchEvent( new Event( 'resize' ) );\n    document.body.className = 'hold-transition login-page';\n  }\n\n  public ngOnDestroy() {\n    document.body.className = '';\n  }\n\n}\n",
    "import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { User } from '../../models/user';\nimport { UserService } from '../../services/user.service';\nimport { MenuService } from '../../services/menu.service';\nimport { LoggerService } from '../../services/logger.service';\nimport { ToasterService, ToasterConfig } from 'angular2-toaster/angular2-toaster';\nimport { TranslateService } from '../../services/translate.service';\n\n@Component( {\n    selector: 'app-layouts-auth',\n    template: `<div class=\"wrapper\">\n\t<app-header\n\t\t[display_messages]='display_messages'\n\t\t[display_notifications]='display_notifications'\n\t\t[display_tasks]='display_tasks'\n\t\t[display_user]='display_user'\n\t\t[display_control]='display_control'\n\t\t[display_logout]='display_logout'\n\t\t[header_components]='header_components'\n    >{{ 'LOADING' | translate }} header...</app-header>\n\t<app-menu-aside\n\t[links]=\"mylinks\"\n\t[display_menu_user]='display_menu_user'\n\t[display_menu_search]='display_menu_search'\n\t>{{ 'LOADING' | translate }} menu...</app-menu-aside>\n\n\t<!-- Content Wrapper. Contains page content -->\n\t<div class=\"content-wrapper\">\n\t\t<!-- Content Header (Page header) -->\n\t\t<toaster-container [toasterconfig]=\"toastrConfig\"></toaster-container>\n\t\t<app-breadcrumb></app-breadcrumb>\n\n\t\t<!-- Main content -->\n\t\t<section class=\"content\">\n\t\t\t<div [ngClass]=\"{'box': boxed_style, 'box-default': boxed_style}\">\n\t\t\t\t<div [ngClass]=\"{'box-body': boxed_style}\">\n\t\t\t\t\t<router-outlet></router-outlet>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</section>\n\t\t<!-- /.content -->\n\t</div>\n\t<!-- /.content-wrapper -->\n\t<app-footer>{{ 'LOADING' | translate }} footer...</app-footer>\n\t<app-control-sidebar *ngIf='display_control_sidebar'>{{ 'LOADING' | translate }} control sidebar...</app-control-sidebar>\n</div>\n<!-- ./wrapper -->\n`\n})\nexport class LayoutAuthComponent implements OnInit, OnDestroy {\n    public toastrConfig: ToasterConfig;\n    public mylinks: Array<any> = [];\n    public skin = 'skin-blue';\n    public display_control = true;\n    public display_user = true;\n    public display_tasks = true;\n    public display_messages = true;\n    public display_notifications = true;\n    public display_menu_user = true;\n    public display_menu_search = true;\n    public display_logout = false;\n    public header_components = [];\n    public boxed_style = true;\n    public display_control_sidebar = true;\n    private logger: LoggerService;\n\n    constructor(\n      private userServ: UserService,\n      private menuServ: MenuService,\n      private toastr: ToasterService,\n      private translate: TranslateService,\n      route: ActivatedRoute) {\n        const param = route.snapshot.data[0];\n        this.skin = this.paramExistOrDefault(param, 'skin', 'skin-blue');\n        this.display_control = this.paramExistOrDefault(param, 'display_control');\n        this.display_user = this.paramExistOrDefault(param, 'display_user');\n        this.display_tasks = this.paramExistOrDefault(param, 'display_tasks');\n        this.display_messages = this.paramExistOrDefault(param, 'display_messages');\n        this.display_notifications = this.paramExistOrDefault(param, 'display_notifications');\n        this.display_menu_user = this.paramExistOrDefault(param, 'display_menu_user');\n        this.display_menu_search = this.paramExistOrDefault(param, 'display_menu_search');\n        this.display_logout = this.paramExistOrDefault(param, 'display_logout', false);\n        this.display_control_sidebar = this.paramExistOrDefault(param, 'display_control_sidebar', true);\n        this.header_components = this.paramExistOrDefault(param, 'header_components', []);\n        this.boxed_style = this.paramExistOrDefault(param, 'boxed_style', true);\n\n        this.toastrConfig = new ToasterConfig( {\n            newestOnTop: true,\n            showCloseButton: true,\n            tapToDismiss: false\n        });\n    }\n\n    private paramExistOrDefault(param: any, index: string, default_value: any = true) {\n      return param.hasOwnProperty(index) ? param[index] : default_value;\n    }\n\n    public ngOnInit(): void {\n        //  sedding the resize event, for AdminLTE to place the height\n        const ie = this.detectIE();\n        if (!ie) {\n            window.dispatchEvent( new Event( 'resize' ) );\n        } else {\n            // solution for IE from @hakonamatata\n            const event = document.createEvent( 'Event' );\n            event.initEvent( 'resize', false, true );\n            window.dispatchEvent( event );\n        }\n\n        // default menu structure, please use the menuService to modify\n        this.mylinks = [\n          {\n            'header': 'NAVIGATION'\n          },\n          {\n            'title': 'Home',\n            'icon': 'dashboard',\n            'link': ['/']\n          }\n        ];\n\n        // register to menu change\n        this.menuServ.getCurrent().subscribe((menu) => {\n          this.mylinks = menu;\n        });\n\n      document.body.className = 'hold-transition ' + this.skin + ' sidebar-mini';\n    }\n\n    public ngOnDestroy(): void {\n      document.body.className = '';\n    }\n\n    protected detectIE(): boolean {\n        const ua: string = window.navigator.userAgent;\n        return ua.includes('MSIE ') || ua.includes('Trident/') || ua.includes('Edge/');\n    }\n\n}\n",
    "import { Injectable } from '@angular/core';\nimport { ReplaySubject } from 'rxjs/Rx';\n\n@Injectable()\nexport class ControlSidebarService {\n  // Handle the state (open or closed)\n  private current_state: ReplaySubject<boolean> = new ReplaySubject<boolean>(1);\n  private default_state: any = false;\n  private current_state_value = false;\n\n  // Handle the items\n  private current_items: ReplaySubject<any> = new ReplaySubject<any>(1);\n  private default_items: any = [\n    {\n      id: 'control-sidebar-home-tab',\n      icon: 'home',\n      active: true,\n      items: [\n        {\n          html: `\n            <h3 class='control-sidebar-heading'>Recent Activity</h3>\n            <ul class='control-sidebar-menu'>\n              <li><a href='javascript::;'> <i\n                  class='menu-icon fa fa-birthday-cake bg-red'></i>\n                  <div class='menu-info'>\n                    <h4 class='control-sidebar-subheading'>Langdon's Birthday</h4>\n                    <p>Will be 23 on April 24th</p>\n                  </div>\n              </a></li>\n            </ul>`\n        },\n        {\n          html: `\n            <h3 class='control-sidebar-heading'>Tasks Progress</h3>\n            <ul class='control-sidebar-menu'>\n              <li><a href='javascript::;'>\n                  <h4 class='control-sidebar-subheading'>\n                    Custom Template Design <span\n                      class='label label-danger pull-right'>70%</span>\n                  </h4>\n                  <div class='progress progress-xxs'>\n                    <div class='progress-bar progress-bar-danger' style='width: 70%'></div>\n                  </div>\n              </a></li>\n            </ul>`\n        }\n      ]\n    },\n    {\n      id: 'control-sidebar-settings-tab',\n      icon: 'gear',\n      active: false,\n      items: [\n        {\n          html: `<form method='post'>\n            <h3 class='control-sidebar-heading'>General Settings</h3>\n            <div class='form-group'>\n              <label class='control-sidebar-subheading'> Report panel\n                usage <input type='checkbox' class='pull-right' checked>\n              </label>\n              <p>Some information about this general settings option</p>\n            </div>\n            <!-- /.form-group -->\n          </form>`\n        }\n      ]\n    }\n  ];\n\n  constructor() {\n    this.current_state.next(this.default_state);\n    this.current_items.next(this.default_items);\n  }\n\n  public setItems(items: any) {\n    this.current_items.next(items);\n  }\n\n  public getItems() {\n    return this.current_items;\n  }\n\n  public getState(): ReplaySubject<boolean> {\n    return this.current_state;\n  }\n\n  public setState(val: boolean): void {\n    this.current_state_value = val;\n    this.current_state.next(this.current_state_value);\n  }\n\n  public open(): void {\n    this.setState(true);\n    this.current_state.next(this.current_state_value);\n  }\n\n  public close(): void {\n    this.setState(false);\n  }\n\n  public toggle(): void {\n    this.setState(!this.current_state_value);\n  }\n}\n",
    "import { Injectable } from '@angular/core';\nimport { ReplaySubject } from 'rxjs/Rx';\n\n@Injectable()\nexport class FooterService {\n    public current: ReplaySubject<any> = new ReplaySubject<any>( 1 );\n    public default: any = {\n      right_part: 'Anything you want',\n      left_part: `<strong>Copyright &copy; 2016 <a href=\"#\" routerLink=\"/\">Company X</a>.\n    \t</strong> All rights reserved.`\n    }\n\n    constructor() {}\n\n    /* Redefine the footer html */\n    public setCurrent( footer: any ) {\n      this.current.next( footer );\n    }\n\n    public getCurrent() {\n      return this.current;\n    }\n}\n",
    "import { Injectable } from '@angular/core';\nimport { ReplaySubject } from 'rxjs/Rx';\n\n@Injectable()\nexport class LogoService {\n    private current: ReplaySubject<any> = new ReplaySubject<any>( 1 );\n    // default logo\n    public logo: any = {\n      html_mini: '<b>A</b>LT',\n      html_lg: '<b>Admin</b>LTE'\n    };\n\n    constructor() {\n      this.setCurrent(this.logo);\n    }\n\n    /* Redefine the logo */\n    public setCurrent( logo: any ) {\n      if (logo.small || logo.big ) {\n        console.log('NgxAdminLTE: LogoService setCurrent: small and big are now deprecated in logo, use html_mini and html_lg');\n      }\n      this.current.next( logo );\n    }\n\n    public getCurrent() {\n      return this.current;\n    }\n}\n",
    "import { Injectable } from '@angular/core';\nimport { ReplaySubject } from 'rxjs/Rx';\nimport { Router } from '@angular/router';\n\n@Injectable()\nexport class MenuService {\n    private current: ReplaySubject<any> = new ReplaySubject<any>( 1 );\n\n    constructor(\n      private router: Router\n    ) {}\n\n    public setCurrent( menu: any ) {\n      this.current.next( menu );\n    }\n\n    public getCurrent() {\n      return this.current;\n    }\n\n}\n",
    "import { Injectable } from '@angular/core';\nimport { Http, Response, Headers } from '@angular/http';\nimport 'rxjs/add/operator/map';\nimport { Observable } from 'rxjs/Observable';\n\n@Injectable()\nexport class RestService {\n    public modelName: string;\n    public headers: Headers;\n    private serverWithApiUrl: string;\n\n    // cache data\n    public lastGetAll: Array<any>;\n    public lastGet: any;\n\n    constructor(private http: Http) {\n        this.modelName = 'to-configure';\n\n        this.headers = new Headers();\n        this.headers.append('Content-Type', 'application/json');\n        this.headers.append('Accept', 'application/json');\n    }\n\n    public setApiUrl( url: string) {\n      this.serverWithApiUrl = url;\n    }\n\n    // HELPERS\n    public getAllFromLS(maxtime = 0): Array<any> {\n      const json = localStorage.getItem( 'rest_all_' + this.modelName );\n      if ( json ) {\n        const obj = JSON.parse(json);\n        if ( obj && (obj.date < (Date.now() - maxtime) ) ) {\n          return obj;\n        }\n      }\n    }\n\n\n    public getFromCache(id): any {\n      if (this.lastGetAll) {\n        return this.lastGetAll.find((unit) => unit.id === id);\n      } else {\n        return null;\n      }\n    }\n\n    private getActionUrl() {\n      return this.serverWithApiUrl + this.modelName + '/';\n    }\n\n\n    // REST functions\n    public getAll(): Observable<any[]> {\n        return this.http.get(this.getActionUrl(), { headers: this.headers })\n            .map((response: Response) => {\n              // getting an array having the same name as the model\n              const data = response.json()[this.modelName];\n              // transforming the array from indexed to associative\n              const tab = data.records.map((elem) => {\n                const unit = {};\n                // using the columns order and number to rebuild the object\n                data.columns.forEach( (champ, index) => {\n                  unit[champ] = elem[index];\n                });\n                return unit;\n              });\n              this.lastGetAll = tab;\n              const obj = {\n                data: tab,\n                date: Date.now()\n              };\n              localStorage.setItem( 'rest_all_' + this.modelName, JSON.stringify(obj) );\n              return tab;\n            })\n            .catch(this.handleError);\n    }\n\n    public get(id: number): Observable<any> {\n        return this.http.get(this.getActionUrl() + id, { headers: this.headers })\n            .map((response: Response) => {\n              const data = response.json();\n              this.lastGet = data;\n              return data;\n            })\n            .catch(this.handleError);\n    }\n\n    public add(item: any): Observable<number> {\n        const toAdd = JSON.stringify(item);\n\n        return this.http.post(this.getActionUrl(), toAdd, { headers: this.headers })\n            .map((response: Response) => response.json())\n            .catch(this.handleError);\n    }\n\n    public addAll(tab: Array<any>): Observable<Array<number>> {\n      const toAdd = JSON.stringify(tab);\n\n      return this.http.post(this.getActionUrl(), toAdd, { headers: this.headers })\n          .map((response: Response) => response.json())\n          .catch(this.handleError);\n    }\n\n    public update(id: number, itemToUpdate: any): Observable<number> {\n        return this.http.put(this.getActionUrl() + id, JSON.stringify(itemToUpdate), { headers: this.headers })\n            .map((response: Response) => response.json())\n            .catch(this.handleError);\n    }\n\n    public delete(id: number): Observable<Response> {\n        return this.http.delete(this.getActionUrl() + id, { headers: this.headers })\n            .catch(this.handleError);\n    }\n\n    private handleError(error: Response) {\n        console.error(error);\n        return Observable.throw(error.json().error || 'Server error');\n    }\n}\n",
    "\n// based on https://github.com/ng-book/angular2-rxjs-chat/blob/master/app/ts/services/NotificationsService.ts\nimport { Notification } from '../models/notification';\nimport { Injectable } from '@angular/core';\nimport { Observable, Subject, ReplaySubject } from 'rxjs/Rx';\n\nconst initialNotifications: Notification[] = [];\n\ntype INotificationsOperation = (notifications: Notification[]) => Notification[];\n\n@Injectable()\nexport class NotificationsService {\n  private notificationsList: Notification[] = [];\n  // a stream that publishes new notifications only once\n  public newNotifications: Subject<Notification> = new Subject<Notification>();\n\n  // `notifications` is a stream that emits an array of the most up to date notifications\n  public notifications: ReplaySubject<Notification[]> = new ReplaySubject<Notification[]>(1);\n\n  // `updates` receives _operations_ to be applied to our `notifications`\n  // it's a way we can perform changes on *all* notifications (that are currently\n  // stored in `notifications`)\n  public updates: Subject<any> = new Subject<any>();\n\n  // action streams\n  public create: Subject<Notification> = new Subject<Notification>();\n  // public markThreadAsRead: Subject<any> = new Subject<any>();\n\n  constructor() {\n    // recois des operation, et les fais sur la liste interne, puis diffuse le resultat sur notifications\n    this.updates.subscribe((ope) => {\n      this.notificationsList = ope(this.notificationsList);\n      console.log(this.notificationsList);\n      this.notifications.next(this.notificationsList);\n    });\n\n    this.newNotifications\n      .map(function(notification: Notification): INotificationsOperation {\n        return (notifications: Notification[]) => {\n          return notifications.concat(notification);\n        };\n      })\n      .subscribe(this.updates);\n\n  }\n\n  // an imperative function call to this action stream\n  public addNotification(notification: Notification): void {\n    this.newNotifications.next(notification);\n  }\n\n}\n",
    "// based on https://github.com/ng-book/angular2-rxjs-chat/blob/master/app/ts/services/MessagesService.ts\nimport { User } from '../models/user';\nimport { Message } from '../models/message';\nimport { Injectable } from '@angular/core';\nimport { Observable, Subject, ReplaySubject } from 'rxjs/Rx';\n\nconst initialMessages: Message[] = [];\n\ntype IMessagesOperation = (messages: Message[]) => Message[];\n\n@Injectable()\nexport class MessagesService {\n  private messagesList: Message[] = [];\n  // a stream that publishes new messages only once\n  public newMessages: Subject<Message> = new Subject<Message>();\n\n  // `messages` is a stream that emits an array of the most up to date messages\n  public messages: ReplaySubject<Message[]> = new ReplaySubject<Message[]>(1);\n\n  // `updates` receives _operations_ to be applied to our `messages`\n  // it's a way we can perform changes on *all* messages (that are currently\n  // stored in `messages`)\n  public updates: Subject<any> = new Subject<any>();\n\n  // action streams\n  public create: Subject<Message> = new Subject<Message>();\n  // public markThreadAsRead: Subject<any> = new Subject<any>();\n\n  constructor() {\n    // recois des operation, et les fais sur la liste interne, puis diffuse le resultat sur messages\n    this.updates.subscribe((ope) => {\n      this.messagesList = ope(this.messagesList);\n      console.log(this.messagesList);\n      this.messages.next(this.messagesList);\n    });\n\n    this.newMessages\n      .map(function(message: Message): IMessagesOperation {\n        return (messages: Message[]) => {\n          return messages.concat(message);\n        };\n      })\n      .subscribe(this.updates);\n\n  }\n\n  // an imperative function call to this action stream\n  public addMessage(message: Message): void {\n    this.newMessages.next(message);\n  }\n\n}\n",
    "import { Injectable, Input } from '@angular/core';\nimport { UserService } from './user.service';\nimport { TranslateService } from './translate.service';\n\n@Injectable()\nexport class LoggerService {\n\n    constructor( private translate: TranslateService ) {}\n\n    public log( component: string, msg?: string, i18nRef?: string, data?: string[] ) {\n        // here we should test some environment config to show or not the log\n        if ( true ) {\n            if ( i18nRef ) {\n                let params: {} = {};\n                if ( data ) {\n                    params = ( data[0] ) ? { 0: data[0] } : params;\n                    params = ( data[1] ) ? { 0: data[0], 1: data[1] } : params;\n                    params = ( data[2] ) ? { 0: data[0], 1: data[1], 2: data[2] } : params;\n                }\n                this.translate.getTranslate().get( i18nRef, params ).subscribe(( res: string ) => {\n                    console.log( component + ': ' + res );\n                });\n            } else {\n                console.log( component + ': ' + msg );\n            }\n        }\n    }\n}\n",
    "import { Injectable, OnInit } from '@angular/core';\nimport { TranslateService as NGXTranslateService } from '@ngx-translate/core';\nimport { UserService } from './user.service';\nimport { User } from '../models/user';\nimport { TranslateHttpLoader } from '@ngx-translate/http-loader';\nimport { HttpClient } from '@angular/common/http';\n\nconst langs = ['en', 'fr', 'ru', 'he', 'zh', 'pt', 'it'];\nconst langmatch = /en|fr|ru|he|zh|pt|it/;\n\n@Injectable()\nexport class TranslateService implements OnInit {\n    private lang = 'us';\n    private currentUser: User;\n\n    constructor( private userServ: UserService, private translate: NGXTranslateService ) {\n        translate.addLangs( langs );\n        // this language will be used as a fallback when a translation isn't found in the current language\n        translate.setDefaultLang( 'en' );\n\n        this.userServ.getCurrent().subscribe(( user: User ) => {\n            this.currentUser = user;\n\n            // the lang to use, if the lang isn't available, it will use the current loader to get them\n            const browserLang = this.translate.getBrowserLang();\n            const browserCultureLang = this.translate.getBrowserCultureLang();\n            console.log( 'Detected browser language: \"' + browserCultureLang + '\"' );\n\n            // check if current User has a Preferred Language set, and it differs from his browser lang\n            let useLang = 'en';\n            const prefLang = ( this.currentUser ) ? this.currentUser.preferredLang : null;\n            if ( !prefLang ) {\n                useLang = browserLang.match( langmatch ) ? browserLang : 'en';\n            } else {\n                console.log( 'Detected User preferred language: \"' + prefLang + '\"' );\n                useLang = prefLang.match( langmatch ) ? prefLang : 'en';\n            }\n            this.translate.use( useLang );\n            console.log( 'Translation language has been set to: \"' + useLang + '\"' );\n            // translate.use( 'ru' );\n        });\n    }\n\n    public ngOnInit() {\n        // TODO\n    }\n\n    public getTranslate(): NGXTranslateService {\n        return this.translate;\n    }\n\n}\n",
    "import { Injectable } from '@angular/core';\nimport { CanActivate, Router } from '@angular/router';\nimport { UserService } from './user.service';\n\n@Injectable()\nexport class CanActivateGuard implements CanActivate {\n  private connected = false;\n\n  constructor(\n    private router: Router,\n    private userService: UserService\n  ) {\n    this.userService.getCurrent().subscribe((user) => {\n      this.connected = user.connected;\n    });\n  }\n\n  public canActivate() {\n    // test here if you user is logged\n    if ( !this.connected ) {\n      this.router.navigate( [ 'login' ] );\n    }\n    return this.connected;\n  }\n}\n",
    "import { User } from '../models/user';\nimport { Injectable } from '@angular/core';\nimport { Observable, ReplaySubject } from 'rxjs/Rx';\nimport { Router } from '@angular/router';\n\n@Injectable()\nexport class UserService {\n    private current: ReplaySubject<User> = new ReplaySubject<User>( 1 );\n\n    // Called when logout\n    public logoutAction: Function;\n\n    constructor(\n      private router: Router\n    ) {}\n\n    public setCurrent( user: User ) {\n      this.current.next( user );\n    }\n\n    public getCurrent() {\n      return this.current;\n    }\n\n    public logout() {\n      if ( this.logoutAction ) {\n        this.logoutAction();\n      } else {\n        const user = new User();\n        user.connected = false;\n        this.setCurrent( user );\n        this.router.navigate(['login']);\n      }\n    }\n}\n",
    "export class User {\n    public firstname: string;\n    public lastname: string;\n    public email: string;\n    public avatarUrl: string;\n    public creationDate: string;\n    public preferredLang: string;\n    public connected = false;\n\n    public constructor( data: any = {}) {\n        this.firstname = data.firstname || '';\n        this.lastname = data.lastname || '';\n        this.email = data.email || '';\n        this.avatarUrl = data.avatarUrl || '';\n        this.creationDate = data.creation_date || Date.now();\n        this.preferredLang = data.preferredLang || null;\n        this.connected = data.connected || false;\n    }\n\n    public getName() {\n        return this.firstname + ' ' + this.lastname;\n    }\n}\n",
    "import { Injectable } from '@angular/core';\nimport { ReplaySubject } from 'rxjs/ReplaySubject';\n\n@Injectable()\nexport class BreadcrumbService {\n  public current: ReplaySubject<any>;\n  private initialData: any = {\n    description: '',\n    display: false,\n    header : '',\n\n    levels: [\n      {\n        icon: 'clock-o',\n        link: ['/'],\n        title: 'Default'\n      }\n    ]\n  };\n\n  constructor() {\n    this.current = new ReplaySubject(1);\n    this.clear();\n  }\n\n  public setCurrent(data: any) {\n    this.current.next(data);\n  }\n\n  public getCurrent() {\n    return this.current;\n  }\n\n  public clear() {\n    this.setCurrent(this.initialData);\n  }\n\n}\n"
  ],
  "names": [
    "ToasterService",
    "TranslateService",
    "HttpClient",
    "TranslateLoader",
    "TranslateModule",
    "HttpClientModule",
    "ToasterModule",
    "RouterModule",
    "HttpModule",
    "BrowserModule",
    "NgModule",
    "TranslateHttpLoader",
    "ViewChild",
    "ViewContainerRef",
    "Input",
    "ComponentFactoryResolver",
    "ViewEncapsulation",
    "Component",
    "Router",
    "router",
    "DomSanitizer",
    "Pipe",
    "ActivatedRoute",
    "ToasterConfig",
    "Injectable",
    "ReplaySubject",
    "Http",
    "Observable",
    "Headers",
    "http",
    "Subject",
    "NGXTranslateService"
  ],
  "mappings": "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"
}
