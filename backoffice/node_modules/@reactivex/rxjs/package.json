{
  "_args": [
    [
      "@reactivex/rxjs@6.0.0-beta.1",
      "/Users/henrique/enei2019/ENEI2019/backoffice"
    ]
  ],
  "_from": "@reactivex/rxjs@6.0.0-beta.1",
  "_id": "@reactivex/rxjs@6.0.0-beta.1",
  "_inBundle": false,
  "_integrity": "sha512-K9/rKSL44wDx6vSkzvD6+7Hib7KRmNOO36uYy/qcOEcxE4UmZPZz2LPMWKA55zi8lpj48OR72rxrYoElve4i+w==",
  "_location": "/@reactivex/rxjs",
  "_phantomChildren": {},
  "_requested": {
    "type": "version",
    "registry": true,
    "raw": "@reactivex/rxjs@6.0.0-beta.1",
    "name": "@reactivex/rxjs",
    "escapedName": "@reactivex%2frxjs",
    "scope": "@reactivex",
    "rawSpec": "6.0.0-beta.1",
    "saveSpec": null,
    "fetchSpec": "6.0.0-beta.1"
  },
  "_requiredBy": [
    "/"
  ],
  "_resolved": "https://registry.npmjs.org/@reactivex/rxjs/-/rxjs-6.0.0-beta.1.tgz",
  "_spec": "6.0.0-beta.1",
  "_where": "/Users/henrique/enei2019/ENEI2019/backoffice",
  "author": {
    "name": "Ben Lesh",
    "email": "ben@benlesh.com"
  },
  "bugs": {
    "url": "https://github.com/ReactiveX/RxJS/issues"
  },
  "config": {
    "commitizen": {
      "path": "cz-conventional-changelog"
    }
  },
  "contributors": [
    {
      "name": "Ben Lesh",
      "email": "ben@benlesh.com"
    },
    {
      "name": "Paul Taylor",
      "email": "paul.e.taylor@me.com"
    },
    {
      "name": "Jeff Cross",
      "email": "crossj@google.com"
    },
    {
      "name": "Matthew Podwysocki",
      "email": "matthewp@microsoft.com"
    },
    {
      "name": "OJ Kwon",
      "email": "kwon.ohjoong@gmail.com"
    },
    {
      "name": "Andre Staltz",
      "email": "andre@staltz.com"
    }
  ],
  "dependencies": {
    "tslib": "^1.9.0"
  },
  "description": "Reactive Extensions for modern JavaScript",
  "devDependencies": {
    "@angular-devkit/build-optimizer": "0.0.24",
    "@types/chai": "4.1.2",
    "@types/lodash": "4.14.102",
    "@types/mocha": "2.2.48",
    "@types/node": "9.4.5",
    "@types/sinon": "4.1.3",
    "@types/sinon-chai": "2.7.29",
    "babel-polyfill": "6.26.0",
    "benchmark": "2.1.0",
    "benchpress": "2.0.0-beta.1",
    "chai": "4.1.2",
    "color": "3.0.0",
    "colors": "1.1.2",
    "commitizen": "2.9.6",
    "coveralls": "3.0.0",
    "cross-env": "5.1.3",
    "cz-conventional-changelog": "1.2.0",
    "danger": "1.1.0",
    "dependency-cruiser": "2.13.0",
    "doctoc": "1.3.0",
    "escape-string-regexp": "1.0.5",
    "esdoc": "0.4.7",
    "eslint": "4.17.0",
    "fs-extra": "5.0.0",
    "get-folder-size": "1.0.1",
    "glob": "7.1.2",
    "gm": "1.23.1",
    "google-closure-compiler-js": "20170218.0.0",
    "gzip-size": "4.1.0",
    "http-server": "0.11.1",
    "husky": "0.14.3",
    "klaw-sync": "3.0.2",
    "lint-staged": "3.2.5",
    "lodash": "4.17.5",
    "markdown-doctest": "0.9.1",
    "minimist": "1.2.0",
    "mkdirp": "0.5.1",
    "mocha": "5.0.0",
    "mocha-in-sauce": "0.0.1",
    "npm-run-all": "4.1.2",
    "npm-scripts-info": "0.3.6",
    "nyc": "11.4.1",
    "opn-cli": "3.1.0",
    "platform": "1.3.5",
    "promise": "8.0.1",
    "protractor": "3.1.1",
    "rollup": "0.36.3",
    "rollup-plugin-inject": "2.0.0",
    "rollup-plugin-node-resolve": "2.0.0",
    "rx": "latest",
    "rxjs": "^5.5.7",
    "shx": "0.2.2",
    "sinon": "4.3.0",
    "sinon-chai": "2.14.0",
    "source-map-support": "0.5.3",
    "symbol-observable": "1.0.1",
    "systemjs": "^0.21.0",
    "ts-node": "4.1.0",
    "tslint": "5.9.1",
    "tslint-no-unused-expression-chai": "0.0.3",
    "typescript": "latest",
    "validate-commit-msg": "2.14.0",
    "watch": "1.0.2",
    "webpack": "1.13.1",
    "xmlhttprequest": "1.8.0"
  },
  "engines": {
    "npm": ">=2.0.0"
  },
  "homepage": "https://github.com/ReactiveX/RxJS",
  "keywords": [
    "Rx",
    "RxJS",
    "ReactiveX",
    "ReactiveExtensions",
    "Streams",
    "Observables",
    "Observable",
    "Stream",
    "ES6",
    "ES2015"
  ],
  "license": "Apache-2.0",
  "lint-staged": {
    "*.@(js)": [
      "eslint --fix",
      "git add"
    ],
    "*.@(ts)": [
      "tslint --fix",
      "git add"
    ]
  },
  "main": "index.js",
  "name": "@reactivex/rxjs",
  "nyc": {
    "include": [
      "src/*.ts",
      "src/**/*.ts"
    ],
    "exclude": [
      "node_modules",
      "dist",
      "*.d.ts",
      "src/**/MiscJSDoc.ts"
    ],
    "extension": [
      ".ts"
    ],
    "require": [
      "ts-node/register"
    ],
    "reporter": [
      "html"
    ],
    "all": true
  },
  "repository": {
    "type": "git",
    "url": "git+ssh://git@github.com/ReactiveX/RxJS.git"
  },
  "scripts": {
    "build_all": "npm-run-all compat_build_all clean_dist copy_sources build_cjs build_esm5 build_esm2015 build_esm5_for_rollup build_umd build_legacy_reexport generate_packages copy_for_tests",
    "build_cjs": "npm-run-all clean_dist_cjs compile_dist_cjs",
    "build_closure_core": "node ./tools/make-closure-core.js",
    "build_docs": "npm-run-all build_global build_esm2015_for_docs build_cjs tests2png decision_tree_widget && esdoc -c esdoc.json && npm-run-all clean_dist_esm2015",
    "build_esm2015": "npm-run-all clean_dist_esm2015 compile_dist_esm2015",
    "build_esm2015_for_docs": "npm-run-all clean_dist_esm2015 compile_dist_esm2015_for_docs",
    "build_esm5": "npm-run-all clean_dist_esm5 compile_dist_esm5",
    "build_esm5_for_rollup": "npm-run-all clean_dist_esm5_for_rollup compile_dist_esm5_for_rollup && mkdirp dist/esm5_for_rollup/node_modules && shx cp -r ./dist-compat/package ./dist/esm5_for_rollup/node_modules/rxjs-compat",
    "build_global": "npm-run-all clean_dist_global build_esm5_for_rollup && mkdirp ./dist/global && node ./tools/make-umd-bundle.js && npm-run-all build_closure_core clean_dist_esm5_for_rollup",
    "build_legacy_reexport": "npm-run-all compile_legacy_reexport",
    "build_perf": "webdriver-manager update && npm-run-all build_cjs build_global perf",
    "build_spec": "npm-run-all build_cjs generate_packages copy_for_tests",
    "build_spec_browser": "webpack --config spec/support/webpack.mocha.config.js",
    "build_spec_full": "npm-run-all compat_build_cjs compile_legacy_reexport compat_generate_packages build_spec",
    "build_umd": "npm-run-all clean_dist_global && mkdirp ./dist/global && node ./tools/make-umd-bundle.js && npm-run-all build_closure_core",
    "clean_dist": "shx rm -rf ./dist",
    "clean_dist_cjs": "shx rm -rf ./dist/cjs",
    "clean_dist_esm2015": "shx rm -rf ./dist/esm2015",
    "clean_dist_esm5": "shx rm -rf ./dist/esm5",
    "clean_dist_esm5_for_rollup": "shx rm -rf ./dist/esm5_for_rollup",
    "clean_dist_global": "shx rm -rf ./dist/global",
    "commit": "git-cz",
    "commitmsg": "validate-commit-msg",
    "compat_build_all": "npm-run-all compat_clean_dist compat_build_cjs compat_build_esm5 compat_build_esm2015 compat_generate_packages",
    "compat_build_cjs": "npm-run-all compat_clean_dist_cjs compat_compile_dist_cjs",
    "compat_build_esm2015": "npm-run-all compat_clean_dist_esm2015 compat_compile_dist_esm2015",
    "compat_build_esm5": "npm-run-all compat_clean_dist_esm5 compat_compile_dist_esm5",
    "compat_clean_dist": "shx rm -rf ./dist-compat",
    "compat_clean_dist_cjs": "shx rm -rf ./dist-compat/cjs",
    "compat_clean_dist_esm2015": "shx rm -rf ./dist-compat/esm2015",
    "compat_clean_dist_esm5": "shx rm -rf ./dist-compat/esm5",
    "compat_compile_dist_cjs": "tsc -p ./tsconfig/compat/tsconfig.cjs.json",
    "compat_compile_dist_esm2015": "tsc -p ./tsconfig/compat/tsconfig.esm2015.json",
    "compat_compile_dist_esm5": "tsc -p ./tsconfig/compat/tsconfig.esm5.json",
    "compat_copy_sources": "mkdirp dist-compat && shx cp -r ./compat/ ./dist-compat/",
    "compat_generate_packages": "node .make-compat-package.js",
    "compile_dist_cjs": "tsc -p ./tsconfig/tsconfig.cjs.json",
    "compile_dist_esm2015": "tsc -p ./tsconfig/tsconfig.esm2015.json",
    "compile_dist_esm2015_for_docs": "tsc ./dist/src/internal/Rx.ts ./dist/src/add/observable/of.ts ./dist/src/MiscJSDoc.ts -m es2015   --sourceMap --outDir ./dist/es6 --target es2015 -d --diagnostics --pretty --noImplicitAny --noImplicitReturns --noImplicitThis --suppressImplicitAnyIndexErrors --moduleResolution node",
    "compile_dist_esm5": "tsc -p ./tsconfig/tsconfig.esm5.json",
    "compile_dist_esm5_for_rollup": "tsc -p ./tsconfig/tsconfig.esm5.rollup.json",
    "compile_legacy_reexport": "tsc -p ./tsconfig/tsconfig.legacy-reexport.json",
    "copy_for_tests": "shx rm -rf ./spec-build && shx cp -r ./spec/ ./spec-build/ && mkdirp ./spec-build/node_modules && shx cp -r ./dist/package/ ./spec-build/node_modules/rxjs && shx cp -r ./dist-compat/package/ ./spec-build/node_modules/rxjs-compat",
    "copy_sources": "mkdirp dist && shx cp -r ./src/ ./dist/src",
    "decision_tree_widget": "cd doc/decision-tree-widget && npm run build && cd ../..",
    "doctoc": "doctoc CONTRIBUTING.md",
    "generate_packages": "node .make-packages.js",
    "info": "npm-scripts-info",
    "lint": "npm-run-all --parallel lint_*",
    "lint_perf": "eslint perf/",
    "lint_spec": "tslint -c tslint.json \"spec/**/*.ts\"",
    "lint_src": "tslint -c tslint.json \"src/**/*.ts\"",
    "perf": "protractor protractor.conf.js",
    "perf_micro": "node ./perf/micro/index.js",
    "precommit": "lint-staged",
    "prepublish": "shx rm -rf ./typings && npm run build_all",
    "publish_docs": "./publish_docs.sh",
    "test": "cross-env TS_NODE_FAST=true mocha --require ts-node/register --opts spec-build/support/coverage.opts \"spec-build/**/*-spec.ts\"",
    "test:circular": "dependency-cruise --validate .dependency-cruiser.json -x \"^node_modules\" src",
    "test:cover": "cross-env TS_NODE_FAST=true nyc npm test",
    "test:systemjs": "node integration/systemjs/systemjs-compatibility-spec.js",
    "test_browser": "npm-run-all build_spec_browser && opn spec/support/mocha-browser-runner.html",
    "tests2png": "mkdirp tmp/docs/img && cross-env TS_NODE_FAST=true mocha --compilers ts:ts-node/register --opts spec/support/tests2png.opts \"spec/**/*-spec.ts\"",
    "watch": "watch \"echo triggering build && npm run build_spec && npm run test && echo build completed\" src -d -u -w=15"
  },
  "scripts-info": {
    "info": "List available script",
    "build_all": "Build all packages (ES6, CJS, UMD) and generate packages",
    "build_cjs": "Build CJS package with clean up existing build",
    "build_esm5": "Build ESM/ES5 package with clean up existing build",
    "build_esm2015": "Build ESM/ES2015 package with clean up existing build",
    "build_closure_core": "Minify Global core build using closure compiler",
    "build_global": "Build Global package, then minify build",
    "build_perf": "Build CJS & Global build, run macro performance test",
    "build_docs": "Build ESM2015 & global package, create documentation using it",
    "clean_dist_cjs": "Clean up existing CJS package output",
    "clean_dist_esm5": "Clean up existing ESM/ES5 package output",
    "clean_dist_esm2015": "Clean up existing ESM/ES2015 package output",
    "clean_dist_global": "Clean up existing Global package output",
    "commit": "Run git commit wizard",
    "compile_dist_cjs": "Compile codebase into CJS module",
    "compile_module_esm5": "Compile codebase into ESM/ES5",
    "compile_dist_esm2015": "Compile codebase into ESM/ES2015",
    "lint_perf": "Run lint against performance test suite",
    "lint_spec": "Run lint against test spec",
    "lint_src": "Run lint against source",
    "lint": "Run lint against everything",
    "perf": "Run macro performance benchmark",
    "perf_micro": "Run micro performance benchmark",
    "test_browser": "Execute mocha test runner on browser against existing test spec build",
    "test": "Execute mocha test runner",
    "test:cover": "Execute test coverage",
    "tests2png": "Generate marble diagram image from test spec",
    "watch": "Watch codebase, trigger compile when source code changes"
  },
  "sideEffects": false,
  "typings": "./dist/package/Rx.d.ts",
  "version": "6.0.0-beta.1"
}
